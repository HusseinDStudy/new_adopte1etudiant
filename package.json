{
  "name": "adopte1etudiant-mvp",
  "version": "1.2.0",
  "private": true,
  "type": "module",
  "packageManager": "npm@10.8.2",
  "scripts": {
    "build": "turbo build",
    "dev": "turbo dev",
    "lint": "turbo lint",
    "format": "prettier --write \"**/*.{ts,tsx,md}\"",
    "test": "turbo run test",
    "test:watch": "turbo run test:watch",
    "test:specific": "turbo run test:specific",
    "test:coverage": "turbo run test:coverage",
    "test:no-coverage": "turbo run test:no-coverage",
    "unit-test": "npm run api:test && npm run web:test",
    "e2e-test": "npm run test:e2e --workspace=apps/web",
    "clean": "find . \\( -name 'node_modules' -o -name 'dist' -o -name 'build' -o -name '.turbo' -o -name 'coverage' -o -name '.next' -o -name '.cache' -o -name '.nyc_output' -o -name 'out' -o -name '.prisma' -o -name '.vite' -o -name 'temp' -o -name 'tmp' \\) -type d -prune -exec rm -rf '{}' + && find . -path './node_modules' -prune -o \\( -name '*.log' -o -name '*.lcov' -o -name '*.tsbuildinfo' -o -name '*.tmp' -o -name '*.temp' -o -name '.DS_Store' -o -name 'Thumbs.db' -o -name '*.swp' -o -name '*.swo' -o -name '*~' -o -name '.env' -o -name 'cookies.txt' \\) -type f -print0 | xargs -0 rm -f",
    "start": "npm run start --workspace=apps/api",
    "preview": "npm run preview --workspace=apps/web",
    "db:migrate:dev": "npm run migrate:dev --workspace=apps/api",
    "db:migrate:deploy": "npm run migrate:deploy --workspace=apps/api",
    "db:push": "npm run db:push --workspace=apps/api",
    "db:studio": "npm run studio --workspace=apps/api",
    "db:generate": "npm run generate --workspace=apps/api",
    "db:seed": "npm run db:seed --workspace=apps/api",
    "db:clean": "npm run db:clean --workspace=apps/api",
    "db:reset": "npm run db:reset --workspace=apps/api",
    "api:dev": "npm run dev --workspace=apps/api",
    "api:build": "npm run build --workspace=apps/api",
    "api:start": "npm run start --workspace=apps/api",
    "api:test": "npm run test --workspace=apps/api",
    "api:test:watch": "npm run test:watch --workspace=apps/api",
    "api:test:coverage": "npm run test:coverage --workspace=apps/api",
    "web:dev": "npm run dev --workspace=apps/web",
    "web:build": "npm run build --workspace=apps/web",
    "web:preview": "npm run preview --workspace=apps/web",
    "web:test": "npm run test --workspace=apps/web",
    "web:test:watch": "npm run test:watch --workspace=apps/web",
    "web:test:coverage": "npm run test:coverage --workspace=apps/web",
    "turbosetup": "cp apps/api/.env.example apps/api/.env",
    "docker:dev": "docker compose up --build",
    "docker:dev:down": "docker compose down",
    "docker:dev:clean": "docker compose down -v && docker system prune -f",
    "docs:generate": "npm run docs:generate --workspace=apps/api",
    "docs:serve": "npm run docs:serve --workspace=apps/api",
    "docs:validate": "npm run docs:validate --workspace=apps/api",
    "docs:test": "npm run docs:test --workspace=apps/api",
    "docs:json": "npm run docs:json --workspace=apps/api",
    "docs:yaml": "npm run docs:yaml --workspace=apps/api",
    "monitor:api": "newman run monitoring/postman-collection.json -e monitoring/environment.json --reporters cli",
    "monitor:api:ci": "newman run monitoring/postman-collection.json --env-var \"baseUrl=$MONITORING_BASE_URL\" --reporters cli",
    "monitor:performance": "artillery run monitoring/artillery-config.yml",
    "monitor:performance:ci": "artillery run monitoring/artillery-config.yml --target \"$MONITORING_BASE_URL\"",
    "monitor:all": "npm run monitor:api && npm run monitor:performance",
    "monitor:all:ci": "npm run monitor:api:ci && npm run monitor:performance:ci",
    "alert:slack": "node scripts/notify-slack.js",
    "alert:slack:failure": "node scripts/notify-slack.js '⚠️ Monitoring failed'",
    "monitor:ci": "npm run monitor:all:ci || npm run alert:slack:failure",
    "setup": "npm install && cp apps/api/.env.example apps/api/.env && cp apps/web/.env.example apps/web/.env && cp .env.example .env && echo '✅ Setup complete! Update apps/api/.env with your values, then run: npm run docker:dev'"
  },
  "devDependencies": {
    "@oclif/core": "^4.5.2",
    "@types/qrcode": "^1.5.5",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "ajv-formats": "^3.0.1",
    "dotenv-cli": "^8.0.0",
    "eslint": "^9.0.0",
    "eslint-plugin-jsx-a11y": "^6.10.0",
    "eslint-plugin-react": "^7.37.0",
    "eslint-plugin-react-hooks": "^5.0.0",
    "eslint-plugin-tailwindcss": "^3.18.2",
    "newman": "^6.2.0",
    "prettier": "^3.6.2",
    "turbo": "^2.5.5"
  },
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "dependencies": {
    "@eslint-community/regexpp": "^4.12.1",
    "@oclif/errors": "^1.3.6",
    "@prisma/client": "^6.12.0",
    "artillery": "^2.0.24",
    "dir-glob": "^3.0.1",
    "qrcode": "^1.5.4",
    "speakeasy": "^2.0.0",
    "validator": "^13.15.15"
  }
}
