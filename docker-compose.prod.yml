version: "3.8"

services:
  api:
    image: ${DOCKERHUB_USERNAME}/api:${API_IMAGE_TAG:-latest}
    container_name: adopte1etudiant-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - WEB_APP_URL=${WEB_APP_URL}
      - PORT=8080
      - NODE_ENV=production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    image: ${DOCKERHUB_USERNAME}/web:${WEB_IMAGE_TAG:-latest}
    container_name: adopte1etudiant-web
    restart: always
    ports:
      - "80:80"
    depends_on:
      - api

  postgres:
    image: postgres:15-alpine
    container_name: adopte1etudiant-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
