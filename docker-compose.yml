version: "3.8"

services:
  # Database for local development
  postgres:
    image: postgres:15-alpine
    container_name: campus-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: campusdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d campusdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  # API service for local development
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: api-dev
    container_name: campus-api
    restart: always
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/campusdb?schema=public
      - JWT_SECRET=local-dev-jwt-secret-key
      - WEB_APP_URL=http://localhost:5173
      - PORT=8080
      - NODE_ENV=development
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - ./node_modules:/app/node_modules
      - /app/node_modules # Prevent overwriting container node_modules
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev --workspace=apps/api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web service for local development
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: web-dev
    container_name: campus-web
    restart: always
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8080
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - ./node_modules:/app/node_modules
      - /app/node_modules # Prevent overwriting container node_modules
    command: npm run dev --workspace=apps/web
    depends_on:
      - api

volumes:
  postgres_data:
